================================================================================================================================================================
                                                        <Dialog宽度说明>
没有说明的Dialog默认的CommonDialog  宽度是dp_240
做了本地宽度定制修改

用户界面
新增用户		dp_240-->dp_260

设备界面
选择设备类型	dp_240-->dp_190
选择设备线路	dp_240-->dp_190
新增设备		dp_240-->dp_300
修改设备		dp_240-->dp_300

我的界面
修改密码		dp_240-->dp_260

标题          -->sp_16
取消和确定     -->sp_15
文本          -->sp_14

============================================================================================================================================================
                                                        <华为扫码说明>

华为扫码点击图片申请存储权限步骤

步骤一：创建HmsScanAnalyzerOptions对象时添加.setErrorCheck（true）

HmsScanAnalyzerOptions options = new HmsScanAnalyzerOptions.Creator().setHmsScanTypes(HmsScan.QRCODE_SCAN_TYPE, HmsScan.DATAMATRIX_SCAN_TYPE).setViewType(1).setErrorCheck(true).create();

步骤二：
然后再点击图库会直接反会到上一个界面
 /**
     * 华为扫码相关
     *
     * @param requestCode
     * @param resultCode
     * @param data
     */
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
     LogUtils.e(TAG + "扫码结果:resultCode==" + resultCode);
             LogUtils.e(TAG + "扫码结果:requestCode==" + requestCode);
             if (requestCode != 1) {
                 LogUtils.e(TAG + "扫码结果:=扫描失败!=" );
                 toast("扫描失败!");
                 return;
             }
             int errorCode = 100;
             try {
                 errorCode = data.getIntExtra(ScanUtil.RESULT_CODE, ScanUtil.SUCCESS);
             } catch (Exception e) {
                 LogUtils.e(TAG + "扫码结果:Exception=e=" + e);
                 return;
             }
             //Default View
             if (requestCode == REQUEST_CODE_SCAN_ONE) {
                 //暂无存储权限
                 if (errorCode == ScanUtil.ERROR_NO_READ_PERMISSION) {
                     getPermissionRead2StartHWScanKit();
                 } else {
                     HmsScan hmsScan = data.getParcelableExtra(ScanUtil.RESULT);
                     if (hmsScan == null) {
                         LogUtils.e(TAG + "扫码结果:解析错误");
                         toast("解析错误!");
                     } else {
                         try {

                             String result = hmsScan.getOriginalValue();
                             LogUtils.e(TAG + "扫码结果:" + result);
                             if (!"".equals(result)) {
                                 if (isGoodJson(result)) {  //是json数据 HD3  或者一体机的格式
                                     LogUtils.e(TAG + "扫码结果：" + "result==二维码数据=" + result);
                                     new Thread() {
                                         @Override
                                         public void run() {
                                             super.run();
                                             getJsonData(result);
                                         }
                                     }.start();
                                 } else {//暂时认定为自定义url链接
                                     new Thread() {
                                         @Override
                                         public void run() {
                                             super.run();
                                             getCustomUrl(result);
                                         }
                                     }.start();
                                 }
                             }
                         } catch (Exception e) {
                             toast("扫码异常!");
                         }
                     }
                 }


             }

    }
================================================================================================================================================================
								            <Android版本对应说明>
Android版本		SDK/API版本		JDK版本		备注
Android 			14			  34		 11+支持17	应用要想在该版本下运行，targetSDK 必须>=33
Android 			13			  33	     11+	应用要想在该版本下运行，targetSDK 必须>=33
Android 			12L			  32		 11+	应用要想在该版本下运行，targetSDK 必须>=31
Android 			12			  31	     11+	应用要想在该版本下运行，targetSDK 必须>=31
Android 			11			  30		 8+
Android 			10 			  29	     8+
Android 			9			  28		 8+
Android 			8.1			  27		 8+
Android 			8.0			  26		 8+
Android 			7.1			  25		 8+
Android 			7.0			  24		 8+
Android 			6			  23		 7+
Android 			5.1		      22		 7+
Android 			5.0			  21		 7+	Jetpack Compose运行最低版本，minSDK 必须>=21

原文链接：https://blog.csdn.net/qq_42690281/article/details/131640670
================================================================================================================================================================
